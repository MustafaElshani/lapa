rule read_nums_datasets:
    input:
        PacBio_cDNA_fastq = expand(
            config['encode']['fastq_read_count'],
            encode_id=config['long_read']['PacBio']['cDNA']),
        PacBio_cDNA_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['PacBio']['cDNA']),

        PacBio_CapTrap_fastq = expand(
            config['encode']['fastq_read_count'],
            encode_id=config['long_read']['PacBio']['CapTrap']),
        PacBio_CapTrap_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['PacBio']['CapTrap']),

        ONT_cDNA_fastq = expand(
            config['encode']['fastq_read_count'],
            encode_id=config['long_read']['ONT']['cDNA']),
        ONT_cDNA_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['ONT']['cDNA']),

        ONT_CapTrap_fastq = expand(
            config['encode']['fastq_read_count'],
            encode_id=config['long_read']['ONT']['CapTrap']),
        ONT_CapTrap_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['ONT']['CapTrap']),

        ONT_R2C2_fastq = expand(
            config['encode']['fasta_read_count'],
            encode_id=config['long_read']['ONT']['R2C2']),
        ONT_R2C2_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['ONT']['R2C2']),

        ONT_dRNA_fastq = expand(
            config['encode']['fastq_read_count'],
            encode_id=config['long_read']['ONT']['dRNA']),
        ONT_dRNA_bam = expand(
            config['encode']['bam_read_count'],
            encode_id=config['long_read']['ONT']['dRNA']),

        short_fastq = expand(config['encode']['fastq_read_count'],
                             encode_id=config['short_rnaseq']['se']),
        short_bam = expand(config['encode']['bam_read_count'],
                           encode_id=config['short_rnaseq']['se']),

        quantseq_fastq = expand(config['encode']['fastq_read_count'],
                                encode_id=config['quantseq']['fastq']),
        quantseq_bam = expand(config['encode']['bam_read_count'],
                              encode_id=config['quantseq']['bam'])
    threads: 1
    resources:
        mem_gb = 32
    output:
        read_nums = "reports/figures/read_nums_datasets.png",
        counts = "reports/tables/read_nums_datasets.csv"
    notebook:
        "read_nums_datasets.ipynb"


rule hist_read_counts:
    input:
        tes = config['common']['tes'].format(genome='hg38'),
        lapa_dir = config['lapa']['lapa_dir']
    threads: 1
    resources:
        mem_gb = 4
    output:
        hist = 'data/results/benchmark/hist/{library_prep}_{platform}_{counting}_hist.csv',
        percentage = 'data/results/benchmark/hist/{library_prep}_{platform}_{counting}_percentage.txt'
    script:
        'hist_read_counts.py'


rule plot_hist_read_count:
    input:
        hist = [
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_hist.csv',
                    platform='PacBio', counting=['end'],
                    library_prep=config['long_read']['PacBio']),
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_hist.csv',
                    platform='ONT', counting=['end'],
                    library_prep=config['long_read']['ONT']),
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_hist.csv',
                    platform='Illumina', counting='end', library_prep='quantseq')
        ],
        percentage = [
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_percentage.txt',
                    platform='PacBio', counting=['end'],
                    library_prep=config['long_read']['PacBio']),
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_percentage.txt',
                    platform='ONT', counting=['end'],
                    library_prep=config['long_read']['ONT']),
            *expand('data/results/benchmark/hist/{library_prep}_{platform}_{counting}_percentage.txt',
                    platform='Illumina', counting=['end'],
                    library_prep='quantseq')
        ]
    threads: 1
    resources:
        mem_gb = 4
    output:
        hist = 'reports/figures/hist_read_counts.png',
        percent = 'reports/figures/percentage_of_reads_tes.png',
        percent_table = 'reports/tables/percentage_of_reads_tes.csv'
    notebook:
        'hist_read_count.ipynb'


rule plot_major_isoform_gene_exp:
    input:
        lapa_dir = [
            *expand(config['lapa']['lapa_dir'],
                    platform='PacBio', counting=['end'],
                    library_prep=config['long_read']['PacBio']),
            *expand(config['lapa']['lapa_dir'],
                    platform='ONT', counting=['end'],
                    library_prep=config['long_read']['ONT']),
            *expand(config['lapa']['lapa_dir'],
                    platform='Illumina', counting='end',
                    library_prep='quantseq')
        ],
        gene_exp = config['short_rnaseq']['gene_exp'].format(sample='WTC11'),
        genes = config['common']['gene_id_name_mapping'].format(genome='hg38')
    threads: 1
    resources:
        mem_gb = 4
    output:
        hist = 'reports/figures/plot_major_isoform_gene_exp.png',
        fracA = 'reports/figures/plot_fracA.png'
    notebook:
        'plot_major_isoform_gene_exp.ipynb'


rule count_tail_len:
    input:
        bams = sample_bams
    threads: 1
    resources:
        mem_gb = 4
    output:
        counts = 'data/results/tail_len/{platform}_{library_prep}.csv'
    script:
        './count_tail_len.py'


rule plot_tail_len:
    input:
        counts = [
            *expand(rules.count_tail_len.output,
                    platform=['PacBio'], library_prep=config['long_read']['PacBio']),
            *expand(rules.count_tail_len.output,
                    platform=['ONT'], library_prep=config['long_read']['ONT'])
        ]
    threads: 1
    resources:
        mem_gb = 4
    output:
        fig = "reports/figures/supplementary/tail_lengths.png",
        median_count = 'reports/tables/median_tail_lengths.csv'
    notebook:
        './plot_tail_len.ipynb'


rule all_plot:
    input:
        rules.read_nums_datasets.output,
        rules.plot_hist_read_count.output,
        rules.plot_major_isoform_gene_exp.output,
        rules.plot_tail_len.output
