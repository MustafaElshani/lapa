def sample_bams(wildcards):
    platform = wildcards['platform']
    library_prep = wildcards['library_prep']

    if platform in {'PacBio', 'ONT'}:
        encode_ids = config['long_read'][platform][library_prep]

        if (library_prep in {'CapTrap', 'cDNA'}) and (platform == 'ONT'):
            bam_path = config['minimap']['bam_stranded']
        else:
            bam_path = config['minimap']['bam']

    elif platform == 'Illumina' and library_prep == 'quantseq':
        encode_ids = config['quantseq']['bam']
        bam_path = config['encode']['bam']

    else:
        raise ValueError('No samples match given wildcards %s'
                         % str(wildcards))

    return expand(bam_path, encode_id=encode_ids)


rule lapa:
    input:
        bams = sample_bams,
        fasta = config['genome']['fasta']['hg38'],
        gtf = config['genome']['gtf']['hg38'],
        chrom_sizes = config['common']['chrom_sizes'].format(genome='hg38')
    threads: 1
    resources:
        mem_gb = 32
    output:
        directory(config['lapa']['lapa_dir'])
    run:
        bams = ','.join(input.bams)
        shell(f'lapa \
        --alignment {bams} \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --counting_method {wildcards.counting} \
        --output_dir {output}')


rule lapa_tss:
    input:
        bams = sample_bams,
        fasta = config['genome']['fasta']['hg38'],
        gtf = config['genome']['gtf']['hg38'],
        chrom_sizes = config['common']['chrom_sizes'].format(genome='hg38')
    params:
        cluster_ratio_cutoff = 0.05
    threads: 1
    resources:
        mem_gb = 32
    output:
        directory(config['lapa']['lapa_tss_dir'])
    run:
        bams = ','.join(input.bams)
        shell("lapa_tss \
        --alignment {bams} \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --cluster_ratio_cutoff {params.cluster_ratio_cutoff} \
        --output_dir {output}")

rule all_lapa:
    input:
        expand(config['lapa']['lapa_dir'],
               platform=['PacBio'], counting=['end', 'tail'],
               library_prep=config['long_read']['PacBio']),

        expand(config['lapa']['lapa_tss_dir'],
               platform=['PacBio'],
               library_prep=config['long_read']['PacBio']),

        expand(config['lapa']['lapa_dir'],
               platform=['ONT'], counting=['end', 'tail'],
               library_prep=config['long_read']['ONT']),

        expand(config['lapa']['lapa_tss_dir'],
               platform=['ONT'],
               library_prep=config['long_read']['ONT']),

        expand(config['lapa']['lapa_dir'],
               platform=['Illumina'], counting=['end'],
               library_prep='quantseq')
