# rule geo_download:
#     input:
#         ''
#     output:
#         ''
#     shell:
#         "wget https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSM5625727&format=file&file=GSM5625727%5FWTC11%2D1%5Frep1%2Ecount%2Ebed%2Egz"

rule correct_gtf_talon:
    input:
        gtf = config['talon']['gtf'],
        read_annot = config['talon']['read_annot'],
        fasta = fasta,
        lapa_dir = config['lapa']['lapa_dir']
    output:
        gtf = config['talon']['gtf_corrected']
    shell:
        "lapa_correct_talon_gtf \
        --gtf_input {input.gtf} \
        --gtf_output {output.gtf} \
        --lapa_dir {input.lapa_dir} \
        --read_annot {input.read_annot} \
        --fasta {input.fasta}"


rule overlap_tes_talon:
    input:
        lapa_dir = config['lapa']['lapa_quantseq_dir'],
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    params:
        max_distance = 50
    output:
        overlap = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlap_annotation.csv'
    script:
        "../common/overlap_talon.py"


rule overlap_tes_corrected_talon:
    input:
        lapa_dir = config['lapa']['lapa_quantseq_dir'],
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance']
    params:
        max_distance = 50
    output:
        overlap = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv'
    script:
        "../common/overlap_talon.py"


rule overlap_tss_talon:
    input:
        cage = (lambda wildcards:
                expand(config['cage']['bed'],
                       geo_id=config['cage'][wildcards.sample])),
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    params:
        max_distance = 50,
        samples = []
    output:
        overlap = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlapcage_annotation.csv'
    script:
        "../common/overlap_cage_talon.py"


rule overlap_tss_corrected_talon:
    input:
        cage = (lambda wildcards:
                expand(config['cage']['bed'],
                       geo_id=config['cage'][wildcards.sample])),
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance']
    params:
        max_distance = 50,
        samples = []
    output:
        overlap = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv'
    script:
        "../common/overlap_cage_talon.py"


rule plot_overlap_annotation:
    input:
        uncorrected = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlap_annotation.csv',
        corrected = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv'
    output:
        fig = 'reports/figures/correction/{sample}_{library_prep}_{platform}_{counting}_overlap_annotation_both.png'
    notebook:
        './plot_overlap_annotation.ipynb'


rule plot_overlap_tss_annotation:
    input:
        uncorrected = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlapcage_annotation.csv',
        corrected = 'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv'
    output:
        fig = 'reports/figures/correction/{sample}_{library_prep}_{platform}_{counting}_overlap_tss_annotation_both.png'
    notebook:
        './plot_overlap_annotation.ipynb'


rule plot_correction_percentage:
    input:
        uncorrected = [
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlap_annotation.csv',
                platform='ONT', counting=['end'], library_prep=ont_library_prep, sample='{sample}'
            ),
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlap_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=pb_library_prep, sample='{sample}'
            )
        ],
        corrected = [
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv',
                platform='ONT', counting=['end'], library_prep=ont_library_prep, sample='{sample}'
            ),
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=pb_library_prep, sample='{sample}'
            )
        ]
    output:
        fig = 'reports/figures/correction/{sample}_correction_percentage.png'
    notebook:
        './plot_correction_percentage.ipynb'


rule plot_correction_tss_percentage:
    input:
        uncorrected = [
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlapcage_annotation.csv',
                platform='ONT', counting=['end'], library_prep=ont_library_prep, sample='{sample}'
            ),
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlapcage_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=pb_library_prep, sample='{sample}'
            )
        ],
        corrected = [
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv',
                platform='ONT', counting=['end'], library_prep=ont_library_prep, sample='{sample}'
            ),
            *expand(
                'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=pb_library_prep, sample='{sample}'
            )
        ]
    output:
        fig = 'reports/figures/correction/{sample}_correction_tss_percentage.png'
    notebook:
        './plot_correction_percentage.ipynb'


rule all_correction:
    input:
        'reports/figures/correction/WTC11_correction_percentage.png',
        'reports/figures/correction/WTC11_correction_tss_percentage.png',

        expand(rules.plot_overlap_annotation.output, sample='WTC11',
               platform='PacBio', counting=['end'],
               library_prep=pb_library_prep),
        expand(rules.plot_overlap_tss_annotation.output, sample='WTC11',
               platform='PacBio', counting=['end'],
               library_prep=pb_library_prep),
        expand(rules.plot_overlap_annotation.output, sample='WTC11',
               platform='ONT', counting=['end'],
               library_prep=ont_library_prep),
        expand(rules.plot_overlap_tss_annotation.output, sample='WTC11',
               platform='ONT', counting=['end'],
               library_prep=ont_library_prep)

# rule plot_overlap_annotation:
#     input:
#         'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_overlap_annotation.csv'
#     output:
#         'reports/figures/correction/{sample}_{library_prep}_{platform}_overlap_annotation.png'
#     script:
#         "../common/plot_fig4.R"

# rule plot_overlap_corrected_annotation:
#     input:
#         'data/results/benchmark/overlap/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv'
#     output:
#         'reports/figures/correction/{sample}_{library_prep}_{platform}_{counting}_overlap_corrected_annotation.png'
#     script:
#         "../common/plot_fig4.R"

