rule link_tss_to_tes:
    input:
        alignment = config['talon']['read_annot'],
        lapa_dir = config['lapa']['lapa_dir'],
        lapa_tss_dir = config['lapa']['lapa_tss_dir']
    threads: 1
    resources:
        mem_gb = 32
    output:
        config['talon']['link']
    shell:
        "lapa_link_tss_to_tes \
        --alignment {input.alignment} \
        --lapa_dir {input.lapa_dir} \
        --lapa_tss_dir {input.lapa_tss_dir} \
        --output {output}"


rule correct_talon:
    input:
        alignment = config['talon']['read_annot'],
        links = config['talon']['link'],
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 32
    log: 'logs/lapa/correct_talon_{library_prep}_{platform}_{counting}.log'
    output:
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance_corrected']
    shell:
        "lapa_correct_talon \
        --links {input.links} \
        --read_annot {input.alignment} \
        --gtf_input {input.gtf} \
        --gtf_output {output.gtf} \
        --abundance_input {input.abundance} \
        --abundance_output {output.abundance} 2> {log}"


rule link_to_transcript:
    input:
        read_annot = config['talon']['read_annot'],
        abundance = config['talon']['abundance'],
        links = config['talon']['link'],
        quantseq_lapa_dir = config['lapa']['lapa_quantseq_dir'],
        cage = expand(config['cage']['bed'], geo_id=config['cage']['geo_id'])
    threads: 1
    resources:
        mem_gb = 32
    output:
        fig = 'reports/figures/correction/{library_prep}_{platform}_{counting}_tss_tes_support.csv'
    notebook:
        "./tss_tes_support.ipynb"


rule overlap_tes_talon:
    input:
        lapa_dir = config['lapa']['lapa_quantseq_dir'],
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 16
    params:
        max_distance = 50
    output:
        overlap = 'data/results/benchmark/overlap/{library_prep}_{platform}_overlap_annotation.csv'
    script:
        "../common/overlap_talon.py"


rule overlap_tes_corrected_talon:
    input:
        lapa_dir = config['lapa']['lapa_quantseq_dir'],
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 16
    params:
        max_distance = 50
    output:
        overlap = 'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv'
    script:
        "../common/overlap_talon.py"


rule overlap_tss_talon:
    input:
        cage = (lambda wildcards:
                expand(config['cage']['bed'],
                       geo_id=config['cage']['geo_id'])),
        gtf = config['talon']['gtf'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 16
    params:
        max_distance = 50,
        samples = []
    output:
        overlap = 'data/results/benchmark/overlap/{library_prep}_{platform}_overlapcage_annotation.csv'
    script:
        "../common/overlap_cage_talon.py"


rule overlap_tss_corrected_talon:
    input:
        cage = (lambda wildcards:
                expand(config['cage']['bed'],
                       geo_id=config['cage']['geo_id'])),
        gtf = config['talon']['gtf_corrected'],
        abundance = config['talon']['abundance']
    threads: 1
    resources:
        mem_gb = 16
    params:
        max_distance = 50,
        samples = []
    output:
        overlap = 'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv'
    script:
        "../common/overlap_cage_talon.py"


rule plot_overlap_annotation:
    input:
        uncorrected = 'data/results/benchmark/overlap/{library_prep}_{platform}_overlap_annotation.csv',
        corrected = 'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv'
    threads: 1
    resources:
        mem_gb = 16
    output:
        fig = 'reports/figures/correction/{library_prep}_{platform}_{counting}_overlap_annotation_both.png'
    notebook:
        './plot_overlap_annotation.ipynb'

rule plot_overlap_tss_annotation:
    input:
        uncorrected = 'data/results/benchmark/overlap/{library_prep}_{platform}_overlapcage_annotation.csv',
        corrected = 'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv'
    threads: 1
    resources:
        mem_gb = 16
    output:
        fig = 'reports/figures/correction/{library_prep}_{platform}_{counting}_overlap_tss_annotation_both.png'
    notebook:
        './plot_overlap_annotation.ipynb'


rule plot_correction_percentage:
    input:
        uncorrected = [
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_overlap_annotation.csv',
                platform='ONT', counting=['end'], library_prep=config['long_read']['ONT']
            ),
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_overlap_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=config['long_read']['PacBio']
            )
        ],
        corrected = [
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv',
                platform='ONT', counting=['end'], library_prep=config['long_read']['ONT']
            ),
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlap_corrected_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=config['long_read']['PacBio']
            )
        ]
    params:
        site = "3'"
    threads: 1
    resources:
        mem_gb = 4
    output:
        fig = 'reports/figures/correction/correction_percentage.png'
    notebook:
        './plot_correction_percentage.ipynb'


rule plot_correction_tss_percentage:
    input:
        uncorrected = [
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_overlapcage_annotation.csv',
                platform='ONT', counting=['end'], library_prep=config['long_read']['ONT']
            ),
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_overlapcage_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=config['long_read']['PacBio']
            )
        ],
        corrected = [
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv',
                platform='ONT', counting=['end'], library_prep=config['long_read']['ONT']
            ),
            *expand(
                'data/results/benchmark/overlap/{library_prep}_{platform}_{counting}_overlapcage_corrected_annotation.csv',
                platform='PacBio', counting=['end'], library_prep=config['long_read']['PacBio']
            )
        ]
    params:
        site = "5'"
    threads: 1
    resources:
        mem_gb = 4
    output:
        fig = 'reports/figures/correction/correction_tss_percentage.png'
    notebook:
        './plot_correction_percentage.ipynb'


rule all_correction:
    input:
        'reports/figures/correction/correction_percentage.png',
        'reports/figures/correction/correction_tss_percentage.png',

        expand(rules.plot_overlap_annotation.output,
               platform='PacBio', counting=['end'],
               library_prep=config['long_read']['PacBio']),
        expand(rules.plot_overlap_tss_annotation.output,
               platform='PacBio', counting=['end'],
               library_prep=config['long_read']['PacBio']),

        expand(rules.plot_overlap_annotation.output,
               platform='ONT', counting=['end'],
               library_prep=config['long_read']['ONT']),
        expand(rules.plot_overlap_tss_annotation.output,
               platform='ONT', counting=['end'],
               library_prep=config['long_read']['ONT'])
