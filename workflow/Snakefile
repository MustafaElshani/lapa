import pandas as pd

configfile: "configs/config.yaml"


df_lrgasp = pd.read_csv(config['lrgasp']['config'], sep='\t')


def genome(wildcards):
    if 'genome' in wildcards.keys():
        return wildcards.genome

    if wildcards.sample == 'ES':
        return 'mm39'
    elif wildcards.sample == 'WTC11':
        return 'hg38'
    # elif wildcards.sample == 'c2c12':
    #     return 'mm10'
    else:
        raise ValueError(f'{wildcards.sample} is not known sample')


def fasta(wildcards):
    return config['genome']['fasta'][genome(wildcards)]


def gtf(wildcards):
    return config['genome']['gtf'][genome(wildcards)]


def chrom_sizes(wildcards):
    return config['common']['chrom_sizes'].format(genome=genome(wildcards))


def star_index(wildcards):
    return config['genome']['star_index'][genome(wildcards)]


pb_library_prep = ['cDNA', 'CapTrap']
ont_library_prep = ['cDNA', 'dRNA', 'CapTrap', 'R2C2']

pb_library_prep = ['cDNA', 'CapTrap']
ont_library_prep = ['cDNA', 'dRNA', 'CapTrap', 'R2C2']

include: "download/Snakefile"
include: "common/Snakefile"
include: "long_reads/Snakefile"
include: "short_rnaseq/Snakefile"
include: "quantseq3/Snakefile"
include: "benchmark/Snakefile"
include: "correction/Snakefile"
include: "wg_encode/Snakefile"
include: "plot/Snakefile"

# include: "wtc11/Snakefile"
# include: "read3/Snakefile"
# include: "c2c12/Snakefile"
# include: "pilot/Snakefile"

rule all:
    input:
        rules.all_plot.input
        # rules.all_wg_encode.input
        # rules.all_short_rnaseq.input,
        # rules.all_lapa.input,
        # rules.all_quantseq3.input
